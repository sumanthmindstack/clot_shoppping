import '../../domain/entities/find_one_entity.dart';

class FindOneResponseModel extends FindOneEntity {
  const FindOneResponseModel({
    super.id,
    super.userId,
    super.arnCode,
    super.riaCode,
    super.pan,
    super.arnStartDate,
    super.arnEndDate,
    super.equityName,
    super.equityShortName,
    super.website,
    super.tanCode,
    super.sipDemat,
    super.agreement,
    super.address1,
    super.address2,
    super.address3,
    super.pincode,
    super.country,
    super.state,
    super.city,
    super.location,
    super.area,
    super.primaryLandline,
    super.alternateLandline,
    super.primaryFax,
    super.alternateFax,
    super.primaryMobile,
    super.alternateMobile,
    super.primaryEmail,
    super.alternateEmail,
    super.sameAsPermanentAddress,
    super.communicationAddress1,
    super.communicationAddress2,
    super.communicationAddress3,
    super.communicationPincode,
    super.communicationCountry,
    super.communicationState,
    super.communicationCity,
    super.communicationLocation,
    super.communicationArea,
    super.communicationPrimaryLandline,
    super.communicationAlternateLandline,
    super.communicationPrimaryFax,
    super.communicationAlternateFax,
    super.communicationPrimaryMobile,
    super.communicationAlternateMobile,
    super.communicationPrimaryEmail,
    super.communicationAlternateEmail,
    super.createdAt,
    super.updatedAt,
  });

  factory FindOneResponseModel.fromJson(Map<String, dynamic> json) {
    return FindOneResponseModel(
      id: json['id'] as int?,
      riaCode: json['ria_code'] as String?,
      userId: json['user_id'] as int?,
      arnCode: json['arn_code'] as String?,
      pan: json['pan'] as String?,
      arnStartDate: json['arn_start_date'] as String?,
      arnEndDate: json['arn_end_date'] as String?,
      equityName: json['equity_name'] as String?,
      equityShortName: json['equity_short_code'] as String?,
      website: json['website'] as String?,
      tanCode: json['tan_code'] as String?,
      sipDemat: json['sip_demat'] as bool?,
      agreement: json['agreement'] as String?,
      address1: json['address1'] as String?,
      address2: json['address2'] as String?,
      address3: json['address3'] as String?,
      pincode: json['pincode'] as String?,
      country: json['country'] as String?,
      state: json['state'] as String?,
      city: json['city'] as String?,
      location: json['location'] as String?,
      area: json['area'] as String?,
      primaryLandline: json['primary_landline'] as String?,
      alternateLandline: json['alternate_landline'] as String?,
      primaryFax: json['primary_fax'] as String?,
      alternateFax: json['alternate_fax'] as String?,
      primaryMobile: json['primary_mobile'] as String?,
      alternateMobile: json['alternate_mobile'] as String?,
      primaryEmail: json['primary_email'] as String?,
      alternateEmail: json['alternate_email'] as String?,
      sameAsPermanentAddress: json['same_as_permanent_address'] as String?,
      communicationAddress1: json['communication_address1'] as String?,
      communicationAddress2: json['communication_address2'] as String?,
      communicationAddress3: json['communication_address3'] as String?,
      communicationPincode: json['communication_pincode'] as String?,
      communicationCountry: json['communication_country'] as String?,
      communicationState: json['communication_state'] as String?,
      communicationCity: json['communication_city'] as String?,
      communicationLocation: json['communication_location'] as String?,
      communicationArea: json['communication_area'] as String?,
      communicationPrimaryLandline:
          json['communication_primary_landline'] as String?,
      communicationAlternateLandline:
          json['communication_alternate_landline'] as String?,
      communicationPrimaryFax: json['communication_primary_fax'] as String?,
      communicationAlternateFax: json['communication_alternate_fax'] as String?,
      communicationPrimaryMobile:
          json['communication_primary_mobile'] as String?,
      communicationAlternateMobile:
          json['communication_alternate_mobile'] as String?,
      communicationPrimaryEmail: json['communication_primary_email'] as String?,
      communicationAlternateEmail:
          json['communication_alternate_email'] as String?,
      createdAt: json['created_at'] == null
          ? null
          : DateTime.parse(json['created_at']),
      updatedAt: json['updated_at'] == null
          ? null
          : DateTime.parse(json['updated_at']),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'user_id': userId,
      'arn_code': arnCode,
      'ria_code': riaCode,
      'pan': pan,
      'arn_start_date': arnStartDate,
      'arn_end_date': arnEndDate,
      'equity_name': equityName,
      'equity_short_code': equityShortName,
      'website': website,
      'tan_code': tanCode,
      'sip_demat': sipDemat,
      'agreement': agreement,
      'address1': address1,
      'address2': address2,
      'address3': address3,
      'pincode': pincode,
      'country': country,
      'state': state,
      'city': city,
      'location': location,
      'area': area,
      'primary_landline': primaryLandline,
      'alternate_landline': alternateLandline,
      'primary_fax': primaryFax,
      'alternate_fax': alternateFax,
      'primary_mobile': primaryMobile,
      'alternate_mobile': alternateMobile,
      'primary_email': primaryEmail,
      'alternate_email': alternateEmail,
      'same_as_permanent_address': sameAsPermanentAddress,
      'communication_address1': communicationAddress1,
      'communication_address2': communicationAddress2,
      'communication_address3': communicationAddress3,
      'communication_pincode': communicationPincode,
      'communication_country': communicationCountry,
      'communication_state': communicationState,
      'communication_city': communicationCity,
      'communication_location': communicationLocation,
      'communication_area': communicationArea,
      'communication_primary_landline': communicationPrimaryLandline,
      'communication_alternate_landline': communicationAlternateLandline,
      'communication_primary_fax': communicationPrimaryFax,
      'communication_alternate_fax': communicationAlternateFax,
      'communication_primary_mobile': communicationPrimaryMobile,
      'communication_alternate_mobile': communicationAlternateMobile,
      'communication_primary_email': communicationPrimaryEmail,
      'communication_alternate_email': communicationAlternateEmail,
      'created_at': createdAt?.toIso8601String(),
      'updated_at': updatedAt?.toIso8601String(),
    };
  }
}
